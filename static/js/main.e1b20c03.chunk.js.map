{"version":3,"sources":["components/NavBar/index.js","components/Header/index.js","components/Home/index.js","components/Week1/index.js","components/Week2/index.js","components/Week3/index.js","components/Week4/index.js","components/Week5/index.js","components/Week6/index.js","components/Week7/index.js","components/Week8/index.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","id","to","Header","Date","now","Home","Week1","Week2","Week3","Week4","Week5","Week6","Week7","Week8","App","className","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"keAoBeA,MAhBf,WACE,OACE,yBAAKC,GAAG,wBACN,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,YCWSC,MAtBf,WACE,OACE,6BACE,gCACI,yBAAKF,GAAG,cAEN,0BAAMA,GAAG,eAAT,qBAEA,yBAAKA,GAAG,gBACJ,8CACA,+CACA,8BAAOG,KAAKC,UAMtB,kBAAC,EAAD,Q,MCNSC,MAXf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKL,GAAG,cAAR,e,MCSSM,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKN,GAAG,cAAR,UAEA,yBAAKA,GAAG,gBAAR,iB,MCOSO,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKP,GAAG,cAAR,UAEA,yBAAKA,GAAG,gBAAR,iB,MCOSQ,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKR,GAAG,cAAR,UAEA,yBAAKA,GAAG,gBAAR,iB,MCOSS,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKT,GAAG,cAAR,UAEA,yBAAKA,GAAG,gBAAR,iB,MCOSU,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKV,GAAG,cAAR,UAEA,yBAAKA,GAAG,gBAAR,iB,MCOSW,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKX,GAAG,cAAR,UAEA,yBAAKA,GAAG,gBAAR,iB,MCOSY,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKZ,GAAG,cAAR,UAEA,yBAAKA,GAAG,gBAAR,iB,MCOSa,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKb,GAAG,cAAR,UAEA,yBAAKA,GAAG,gBAAR,iBCoBSc,MAlBf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWb,IACjC,kBAAC,IAAD,CAAOW,KAAK,UAAUE,UAAWZ,IACjC,kBAAC,IAAD,CAAOU,KAAK,UAAUE,UAAWX,IACjC,kBAAC,IAAD,CAAOS,KAAK,UAAUE,UAAWV,IACjC,kBAAC,IAAD,CAAOQ,KAAK,UAAUE,UAAWT,IACjC,kBAAC,IAAD,CAAOO,KAAK,UAAUE,UAAWR,IACjC,kBAAC,IAAD,CAAOM,KAAK,UAAUE,UAAWP,IACjC,kBAAC,IAAD,CAAOK,KAAK,UAAUE,UAAWN,IACjC,kBAAC,IAAD,CAAOI,KAAK,UAAUE,UAAWL,OCbrBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e1b20c03.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './styles.css';\n\nfunction NavBar() {\n  return (\n    <div id=\"nav-bar-link-wrapper\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/week-1\">Week 1</Link>\n      <Link to=\"/week-2\">Week 2</Link>\n      <Link to=\"/week-3\">Week 3</Link>\n      <Link to=\"/week-4\">Week 4</Link>\n      <Link to=\"/week-5\">Week 5</Link>\n      <Link to=\"/week-6\">Week 6</Link>\n      <Link to=\"/week-7\">Week 7</Link>\n      <Link to=\"/week-8\">Week 8</Link>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport './styles.css';\nimport NavBar from '../NavBar';\n\nfunction Header() {\n  return (\n    <div>\n      <header>\n          <div id=\"class-info\">\n            \n            <span id=\"class-title\">IDM-2193C Web Dev</span>\n\n            <div id=\"student-info\">\n                <span>Caroline Cho</span>\n                <span>Prof. Leopold</span>\n                <span>{Date.now()}</span>\n            </div>\n\n          </div>\n      </header>\n\n      <NavBar />\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Home() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Home Page</div>\n      \n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Week1() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Week 1</div>\n\n      <div id=\"page-content\">\n        Coming Soon\n      </div>\n    </div>\n  );\n}\n\nexport default Week1;\n","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Week2() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Week 2</div>\n\n      <div id=\"page-content\">\n        Coming Soon\n      </div>\n    </div>\n  );\n}\n\nexport default Week2;\n","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Week3() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Week 3</div>\n\n      <div id=\"page-content\">\n        Coming Soon\n      </div>\n    </div>\n  );\n}\n\nexport default Week3;\n","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Week4() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Week 4</div>\n\n      <div id=\"page-content\">\n        Coming Soon\n      </div>\n    </div>\n  );\n}\n\nexport default Week4;\n","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Week5() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Week 5</div>\n\n      <div id=\"page-content\">\n        Coming Soon\n      </div>\n    </div>\n  );\n}\n\nexport default Week5;\n","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Week6() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Week 6</div>\n\n      <div id=\"page-content\">\n        Coming Soon\n      </div>\n    </div>\n  );\n}\n\nexport default Week6;\n","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Week7() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Week 7</div>\n\n      <div id=\"page-content\">\n        Coming Soon\n      </div>\n    </div>\n  );\n}\n\nexport default Week7;\n","import React from 'react';\nimport Header from '../Header';\nimport './styles.css';\n\nfunction Week8() {\n  return (\n    <div>\n      <Header />\n\n      <div id=\"page-title\">Week 8</div>\n\n      <div id=\"page-content\">\n        Coming Soon\n      </div>\n    </div>\n  );\n}\n\nexport default Week8;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home';\nimport Week1 from './components/Week1';\nimport Week2 from './components/Week2';\nimport Week3 from './components/Week3';\nimport Week4 from './components/Week4';\nimport Week5 from './components/Week5';\nimport Week6 from './components/Week6';\nimport Week7 from './components/Week7';\nimport Week8 from './components/Week8';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/week-1\" component={Week1} />\n        <Route path=\"/week-2\" component={Week2} />\n        <Route path=\"/week-3\" component={Week3} />\n        <Route path=\"/week-4\" component={Week4} />\n        <Route path=\"/week-5\" component={Week5} />\n        <Route path=\"/week-6\" component={Week6} />\n        <Route path=\"/week-7\" component={Week7} />\n        <Route path=\"/week-8\" component={Week8} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}